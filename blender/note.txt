https://docs.blender.org/api/current/

type、name
location、scale、rotation_euler
------------------------------------------------------------
import bpy
#移除
bpy.data.objects.remove(object)
bpy.ops.object.delete()
#插入
bpy.ops.mesh.primitive_monkey_add()
#获取对象
bpy.data.objects[1]
bpy.context.scene.objects[1]
#合并
bpy.ops.object.select_all(action='DESELECT')#取消选择
bpy.ops.object.select_by_type(type='MESH')#选中所有mesh对象
bpy.ops.object.join()#合并
bpy.ops.object.duplicate()#复制
#分裂
bpy.ops.mesh.separate(type="SELECTED")#可以先'MATERIAL',后 'LOOSE'
#精简对象
obj.modifiers.new("dec", type = "DECIMATE")
obj.modifiers[attrName].ratio = r
bpy.ops.object.mode_set(mode='OBJECT')#进入物体模式才能看到简化结果

----------------------------------------------------------

context（正文）是blender数据管理中的一个全局变量集合

bpy.context.selected_objects #访问选择上的对象列表，明显看出可以同时选择多个对象
bpy.context.active_object #访问目前激活的对象，
-----------------------------------
data

bpy.data.objects  #访问场景内普通对象列表，包括lamp、camera以及mesh模型的
bpy.data.scenes  #访问场景列表
bpy.data.materials  #访问材质对象列表

bpy.data.objects['Camera']  #访问名为`Camera`的摄像机对象
bpy.data.objects[1]  #访问列表中的第一个对象

bpy.data.objects['Camera'].name #访问对象名称
bpy.data.objects['Camera'].location #访问对象的位置


#通过select_pattern命令来按照物体命名查找选定物体，支持通配符*模糊匹配
bpy.ops.object.select_pattern(pattern="Cube", case_sensitive=False, extend=True)

----------------------------------------------------------
----------------------------------------------------------

mathutils

import mathutils
blue_color = mathutils.Color((0.0, 0.0, 1.0))   #新建一个颜色实例（蓝色）
mathutils.geometry.box_fit_2d(points)   #工具方法直接调用，求多个点的边界矩形框

----------------------------------------------------------
----------------------------------------------------------
bgl
#This module wraps OpenGL constants and functions, making them available from within Blender Python.


----------------------------------------------------------
----------------------------------------------------------
面板：
ID 标签 空间类型 区域类型 上下文





